// Question Link : https://www.hackerearth.com/practice/data-structures/arrays/1-d/practice-problems/algorithm/thief-and-warehouses-6ebf4e07/
// Code : 

#include<bits/stdc++.h>
using namespace std;

#define ll long long 

int main(){

	int t; cin >> t;
	while(t--){
		int n; cin >> n;
		ll a[n];
		for(int i=0;i<n;i++){
			cin >> a[i];
		}
		ll ans=0,sum=0; // largest area in histogram 
		stack<ll>st;
		int i=0;
		while(i<n){
			if(st.empty() || a[st.top()]<=a[i]){
				st.push(i);
				i++;
			}else{
				ll ele=st.top();
				st.pop();
				if(!st.empty())
				sum=a[ele]*(i-1-st.top()); 
				else
				sum=a[ele]*i;
			}
			ans=max(ans,sum);
		}

		while(!st.empty()){
			
				ll ele=st.top();
				st.pop();
				if(!st.empty())
				sum=a[ele]*(i-1-st.top());
				else
				sum=a[ele]*i;

			ans=max(ans,sum);
		}
		

		cout << ans << '\n';
	}
    


	return 0;
}

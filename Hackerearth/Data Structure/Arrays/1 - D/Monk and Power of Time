// Ques link - https://www.hackerearth.com/practice/data-structures/arrays/1-d/practice-problems/algorithm/monk-and-power-of-time/

#include<bits/stdc++.h>
using namespace std;

#define ll long long 

int main(){

	int n; cin >> n;
	vector<int>v,v2;
	for(int i=0;i<n;i++){
		int a; cin >> a;
		v.push_back(a);
	}
    
	for(int i=0;i<n;i++){
		int a; cin >> a;
		v2.push_back(a);
	}
	int ans=0;
	while(v.size()!=0){
		if(v[0]==v2[0]){
			v.erase(v.begin());
			v2.erase(v2.begin());
		}else{
			int a=v[0];
			v.erase(v.begin());
			v.push_back(a);
		}
		ans++;
	}

	cout << ans;


	return 0;
}

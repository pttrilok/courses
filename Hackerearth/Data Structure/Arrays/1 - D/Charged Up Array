// Question Link : https://www.hackerearth.com/practice/data-structures/arrays/1-d/practice-problems/algorithm/charged-up-array-f35a5e23/
// Code : 

#include<bits/stdc++.h>
using namespace std;

#define ll long long 
#define mod 1000000007

int main(){
	
	int t; cin >> t;
	while(t--){
		int n; cin >> n;
	
		ll a[n],ans=0;
		
		for(int i=0;i<n;i++){
			cin >> a[i];
			// it can be observed that element will be present in 2^n-1 subsets so it should be larger or equal to this.
			if(a[i]>=pow(2,n-1)) 
			ans+=a[i];
			ans%=mod;
		}
		cout << ans << '\n';
	}
	return 0;
}
